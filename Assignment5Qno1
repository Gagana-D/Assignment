import java.util.HashMap;
public class CoinChange {
    public static int coinChange(int[] coins, int amount) {
      HashMap<Integer, Integer> dp = new HashMap<>();
        dp.put(0,0);
        for (int i = 1; i <= amount; i++) {
            int min = Integer.MAX_VALUE;
            for (int j = 0; j < coins.length; j++) {
                int remaining = i - coins[j];
                if (remaining >= 0 && dp.containsKey(remaining) && dp.get(remaining) != -1) {
                    if (dp.get(remaining) + 1 < min) { 
                        min = dp.get(remaining) + 1;
                    }
                }
            }
            if (min == Integer.MAX_VALUE) {
                dp.put(i, -1);
            } else {
                dp.put(i, min);
            }
      }
        return dp.get(amount);
    }
    public static void main(String[] args) {
        int[] coins = {1, 2, 5};
        int amount = 11;
        int result = coinChange(coins, amount);
        System.out.println("Minimum coins needed: " + result);
    }
}
